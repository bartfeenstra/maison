version: '3.4'
services:
  db:
    image: 'mariadb:10.2'
    restart: on-failure
    ports:
     - '3306:3306'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './db/data:/var/lib/mysql'
      - './db/conf:/etc/mysql/conf.d'
    networks:
      maison:
        aliases:
          - db
    environment:
      MYSQL_ROOT_PASSWORD: 'bartman'
  openhab:
    image: 'openhab/openhab:2.2.0-amd64-debian'
    restart: on-failure
    tty: true
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './openhab/addons:/openhab/addons'
      - './openhab/conf:/openhab/conf'
      - './openhab/userdata:/openhab/userdata'
    expose:
     - '8081'
    networks:
      maison:
        aliases:
          - openhab
    environment:
      OPENHAB_HTTP_PORT: '8081'
    depends_on:
      - db
      - ola
  ola:
    image: ola:ola
    build: ./ola
    restart: on-failure
    expose:
     - '9010'
     - '9090'
    networks:
      maison:
        aliases:
          - ola
    # The FTDI USB device we need can be (un)mounted at any time, and as any /dev/ttyUSB* device. Because we trust this
    # container, we run it in privileged mode and allow access to any device, so we can choose the right one runtime.
    privileged: true
  vcs:
    image: 'gitea/gitea:1.4'
    restart: on-failure
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './vcs:/data'
    ports:
      - "3000:3000"
      - "222:222"
    networks:
      maison:
        aliases:
          - vcs
    depends_on:
      - db
  ci:
    image: 'drone/drone:0.8'
    restart: on-failure
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
    ports:
      - '9000'
    networks:
      maison:
        aliases:
          - ci
    environment:
      DRONE_OPEN: 'true'
      DRONE_HOST: 'http://ci.maison.bartfeenstra.com'
      DRONE_SECRET: 'SuperSecret'
      DRONE_ADMIN: 'bart'
      DRONE_GITEA: 'true'
      DRONE_GITEA_URL: 'http://git.maison.bartfeenstra.com'
      DRONE_GITEA_GIT_USERNAME: 'drone'
      DRONE_GITEA_GIT_PASSWORD: 'bartman'
      DRONE_DATABASE_DRIVER: mysql
      DRONE_DATABASE_DATASOURCE: 'drone:bartman@tcp(db:3306)/drone?parseTime=true'
      GIN_MODE: release
    depends_on:
      - db
      - vcs
  ci-agent:
    image: 'drone/agent:0.8'
    restart: on-failure
    command: agent
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      maison:
        aliases:
          - ci
    environment:
      DRONE_SERVER: ci:9000
      DRONE_SECRET: 'SuperSecret'
    depends_on:
      - ci
  network:
    image: 'jacobalberty/unifi:5.7'
    restart: on-failure
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './network/data:/unifi'
    network_mode: host
    environment:
      RUNAS_UID0: 'false'
  nginx:
    image: maison:nginx
    build: ./nginx
    restart: on-failure
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './nginx/htpasswd:/etc/nginx/htpasswd'
    expose:
     - '80'
     - '443'
    ports:
     - '80:80'
     - '443:443'
#    depends_on:
#      - certbot
    networks:
      - maison
#  certbot:
#    image: maison:certbot
#    build: ./certbot
#    networks:
#      maison:
#        aliases:
#          - certbot
networks:
  maison:
