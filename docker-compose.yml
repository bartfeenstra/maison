version: '3.4'
services:
  consul:
    image: maison:consul
    build: ./services/consul
    restart: always
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './data/services/consul:/consul/data'
    network_mode: host
    environment:
      MAISON_LOCAL_IP: '${MAISON_LOCAL_IP}'
      MAISON_CONSUL_MASTER_ACL_TOKEN_UUID: '${MAISON_CONSUL_MASTER_ACL_TOKEN_UUID}'
      MAISON_CONSUL_TEMPLATE_ACL_TOKEN_UUID: '${MAISON_CONSUL_TEMPLATE_ACL_TOKEN_UUID}'
      SERVICE_8500_NAME: consul
      SERVICE_8500_TAGS: 'maison-web,maison-web-auth'
      SERVICE_8500_CHECK_HTTP: '/'
  registrator:
    image: gliderlabs/registrator:latest
    restart: always
    command: '-internal=true -cleanup=true -deregister=always -resync=1 consul://${MAISON_LOCAL_IP}:8500'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - '/var/run/docker.sock:/tmp/docker.sock'
    environment:
      MAISON_LOCAL_IP: '${MAISON_LOCAL_IP}'
      MAISON_CONSUL_MASTER_ACL_TOKEN_UUID: '${MAISON_CONSUL_MASTER_ACL_TOKEN_UUID}'
    depends_on:
      - consul
  syslog:
    image: jumanjiman/rsyslog:latest
    restart: always
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
    environment:
      SERVICE_514_NAME: 'syslog'
      SERVICE_514_CHECK_TCP: 'true'
    networks:
      maison:
        aliases:
          - syslog
  db:
    image: 'mariadb:10.3'
    restart: always
    ports:
     - '3306:3306'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './data/services/db:/var/lib/mysql'
      - './services/db/conf:/etc/mysql/conf.d'
    networks:
      maison:
        aliases:
          - db
    environment:
      MYSQL_ROOT_PASSWORD: '${MAISON_DB_ROOT_PASSWORD}'
      SERVICE_3306_NAME: db
      SERVICE_3306_CHECK_TCP: 'true'
  mailer:
    image: maison:mailer
    build: ./services/mailer
    restart: always
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
    networks:
      maison:
        aliases:
          - mailer
    environment:
      MAISON_MAILER_DOMAIN: '${MAISON_MAILER_DOMAIN}'
      SERVICE_25_NAME: mailer
      SERVICE_25_CHECK_TCP: 'true'
  hab:
    image: maison:hab
    build: ./services/hab
    restart: always
    tty: true
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './services/hab/conf/conf:/openhab/conf'
      - './data/services/hab:/openhab/userdata'
      - './services/hab/conf/userdata/etc:/openhab/userdata/etc'
    networks:
      maison:
        aliases:
          - hab
    environment:
      MAISON_HAB_DB_NAME: '${MAISON_HAB_DB_NAME}'
      MAISON_HAB_DB_USERNAME: '${MAISON_HAB_DB_USERNAME}'
      MAISON_HAB_DB_PASSWORD: '${MAISON_HAB_DB_PASSWORD}'
      SERVICE_8080_NAME: hab
      SERVICE_8080_TAGS: 'maison-web,maison-web-auth'
      SERVICE_5007_IGNORE: 'true'
      SERVICE_8101_IGNORE: 'true'
      SERVICE_8443_IGNORE: 'true'
    depends_on:
      - db
      - ola
  ola:
    image: bartfeenstra/ola:0.1
    restart: always
    networks:
      maison:
        aliases:
          - ola
    environment:
      OLA_PLUGIN_E131: 1
      OLA_PLUGIN_FTDIDMX: 1
      SERVICE_9010_IGNORE: 'true'
      SERVICE_9090_NAME: ola
      SERVICE_9090_TAGS: 'maison-web,maison-web-auth'
      SERVICE_9090_CHECK_HTTP: '/'
    # The FTDI USB device we need can be (un)mounted at any time, and as any /dev/ttyUSB* device. Because we trust this
    # container, we run it in privileged mode and allow access to any device, so we can choose the right one runtime.
    privileged: true
  vcs:
    image: maison:vcs
    build: ./services/vcs
    restart: always
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './data/services/vcs:/data'
      - './services/vcs/conf/gitea:/data/gitea/conf'
    ports:
      - '222:22'
    networks:
      maison:
        aliases:
          - vcs
    environment:
      MAISON_VCS_DB_NAME: '${MAISON_VCS_DB_NAME}'
      MAISON_VCS_DB_USERNAME: '${MAISON_VCS_DB_USERNAME}'
      MAISON_VCS_DB_PASSWORD: '${MAISON_VCS_DB_PASSWORD}'
      MAISON_WEB_PROTOCOL: '${MAISON_WEB_PROTOCOL}'
      MAISON_WEB_DOMAIN: '${MAISON_WEB_DOMAIN}'
      MAISON_MAILER_DOMAIN: '${MAISON_MAILER_DOMAIN}'
      SERVICE_3000_NAME: 'vcs'
      SERVICE_3000_TAGS: 'maison-web'
      SERVICE_3000_CHECK_TCP: 'true'
      SERVICE_222_NAME: 'vcs-ssh'
      SERVICE_222_CHECK_TCP: 'true'
    depends_on:
      - db
  ci:
    image: 'drone/drone:0.8'
    restart: always
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
    networks:
      maison:
        aliases:
          - ci
    environment:
      DRONE_OPEN: 'true'
      DRONE_HOST: '${MAISON_WEB_PROTOCOL}://ci.${MAISON_WEB_DOMAIN}'
      DRONE_SECRET: '${MAISON_CI_DRONE_SECRET}'
      DRONE_ADMIN: '${MAISON_VCS_ADMIN_USERNAME}'
      DRONE_GITEA: 'true'
      DRONE_GITEA_URL: '${MAISON_WEB_PROTOCOL}://vcs.${MAISON_WEB_DOMAIN}'
      DRONE_GITEA_GIT_USERNAME: '${MAISON_CI_GITEA_USERNAME}'
      DRONE_GITEA_GIT_PASSWORD: '${MAISON_CI_GITEA_PASSWORD}'
      DRONE_DATABASE_DRIVER: mysql
      DRONE_DATABASE_DATASOURCE: '${MAISON_CI_DB_USERNAME}:${MAISON_CI_DB_PASSWORD}@tcp(db:3306)/${MAISON_CI_DB_NAME}?parseTime=true'
      GIN_MODE: release
      SERVICE_8000_NAME: ci
      SERVICE_8000_TAGS: 'maison-web'
      SERVICE_8000_CHECK_HTTP: '/'
      SERVICE_443_IGNORE: 'true'
      SERVICE_80_IGNORE: 'true'
      SERVICE_9000_IGNORE: 'true'
    depends_on:
      - db
      - vcs
  ci-agent:
    image: 'drone/agent:0.8'
    restart: always
    command: agent
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      - maison
    environment:
      DRONE_SERVER: ci:9000
      DRONE_SECRET: '${MAISON_CI_DRONE_SECRET}'
      SERVICE_3000_IGNORE: 'true'
    depends_on:
      - ci
  network:
    image: 'jacobalberty/unifi:5.7'
    restart: always
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './data/services/network:/unifi'
    network_mode: host
    environment:
      RUNAS_UID0: 'false'
      SERVICE_8443_NAME: network
      SERVICE_8443_TAGS: 'maison-web,maison-web-auth,maison-web-https'
      SERVICE_8443_CHECK_HTTPS: '/'
  web:
    image: maison:web
    build: ./services/web
    restart: always
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './data/services/web/htpasswd:/etc/nginx/htpasswd'
      - './data/services/web/letsencrypt:/etc/letsencrypt'
    ports:
     - '80:80'
     - '443:443'
    networks:
      maison:
        aliases:
          - web
          # @todo How can we get rid of these explicitly defined aliases? Do we even need them?
          - 'network.${MAISON_WEB_DOMAIN}'
          - 'hab.${MAISON_WEB_DOMAIN}'
          - 'ola.${MAISON_WEB_DOMAIN}'
          - 'vcs.${MAISON_WEB_DOMAIN}'
          - 'ci.${MAISON_WEB_DOMAIN}'
    environment:
      MAISON_LOCAL_IP: '${MAISON_LOCAL_IP}'
      MAISON_WEB_PROTOCOL: '${MAISON_WEB_PROTOCOL}'
      MAISON_WEB_DOMAIN: '${MAISON_WEB_DOMAIN}'
      CONSUL_TOKEN: '${MAISON_CONSUL_TEMPLATE_ACL_TOKEN_UUID}'
      SERVICE_80_NAME: http
      SERVICE_80_CHECK_TCP: 'true'
      SERVICE_443_IGNORE: 'true'
    depends_on:
      - consul
  dns:
    image: maison:dns
    build: ./services/dns
    restart: always
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
    ports:
     - '5300:53'
     - '5300:53/udp'
    networks:
      maison:
        aliases:
          - dns
    environment:
      MAISON_WEB_DOMAIN: '${MAISON_WEB_DOMAIN}'
      MAISON_LOCAL_IP: '${MAISON_LOCAL_IP}'
      CONSUL_TOKEN: '${MAISON_CONSUL_TEMPLATE_ACL_TOKEN_UUID}'
      SERVICE_53_NAME: 'dns'
      SERVICE_53_CHECK_TCP: 'true'
networks:
  maison:
