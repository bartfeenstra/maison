version: '3.4'
services:
  db:
    image: 'mariadb:10.3'
    restart: on-failure
    ports:
     - '3306:3306'
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './db/data:/var/lib/mysql'
      - './db/conf:/etc/mysql/conf.d'
    networks:
      maison:
        aliases:
          - db
    environment:
      MYSQL_ROOT_PASSWORD: '${MAISON_DB_ROOT_PASSWORD}'
  deepspeech:
    image: alfred:deepspeech
    build: ./deepspeech
    expose:
     - "80"
#    ports:
#     - "8087:80"
    networks:
      maison:
        aliases:
          - deepspeech
  mycroft:
    image: alfred:mycroft
    build: ./mycroft
    environment:
      - PULSE_SERVER=unix:/run/user/1000/pulse/native
    networks:
      maison:
        aliases:
          - mycroft
    volumes:
      # @todo Is there a cross-platform environment variable with the current user ID?
      - /run/user/1000/pulse:/run/user/1000/pulse
    # @todo Do we need this for audio access?
    privileged: true
  openhab:
    image: maison:openhab
    build: ./openhab
    restart: on-failure
    tty: true
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './openhab/addons:/openhab/addons'
      - './openhab/conf:/openhab/conf'
      - './openhab/userdata:/openhab/userdata'
    networks:
      maison:
        aliases:
          - openhab
    environment:
      OPENHAB_HTTP_PORT: '8081'
      MAISON_HAB_DB_NAME: '${MAISON_HAB_DB_NAME}'
      MAISON_HAB_DB_USERNAME: '${MAISON_HAB_DB_USERNAME}'
      MAISON_HAB_DB_PASSWORD: '${MAISON_HAB_DB_PASSWORD}'
    depends_on:
      - db
      - ola
  ola:
    image: maison:ola
    build: ./ola
    restart: on-failure
    expose:
     - '9010'
     - '9090'
    networks:
      maison:
        aliases:
          - ola
    # The FTDI USB device we need can be (un)mounted at any time, and as any /dev/ttyUSB* device. Because we trust this
    # container, we run it in privileged mode and allow access to any device, so we can choose the right one runtime.
    privileged: true
  vcs:
    image: maison:vcs
    build: ./vcs
    restart: on-failure
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './vcs/data:/data'
    ports:
      - '3000:3000'
      - '222:222'
    networks:
      maison:
        aliases:
          - vcs
    environment:
      MAISON_VCS_DB_NAME: '${MAISON_VCS_DB_NAME}'
      MAISON_VCS_DB_USERNAME: '${MAISON_VCS_DB_USERNAME}'
      MAISON_VCS_DB_PASSWORD: '${MAISON_VCS_DB_PASSWORD}'
      MAISON_WEB_PROTOCOL: '${MAISON_WEB_PROTOCOL}'
    depends_on:
      - db
  ci:
    image: 'drone/drone:0.8'
    restart: on-failure
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
    ports:
      - '9000'
    networks:
      maison:
        aliases:
          - ci
    environment:
      DRONE_OPEN: 'true'
      DRONE_HOST: '${MAISON_WEB_PROTOCOL}://${MAISON_CI_DOMAIN}'
      DRONE_SECRET: '${MAISON_CI_DRONE_SECRET}'
      DRONE_ADMIN: '${MAISON_VCS_ADMIN_USERNAME}'
      DRONE_GITEA: 'true'
      DRONE_GITEA_URL: '${MAISON_WEB_PROTOCOL}://${MAISON_VCS_DOMAIN}'
      DRONE_GITEA_GIT_USERNAME: '${MAISON_CI_GITEA_USERNAME}'
      DRONE_GITEA_GIT_PASSWORD: '${MAISON_CI_GITEA_PASSWORD}'
      DRONE_DATABASE_DRIVER: mysql
      DRONE_DATABASE_DATASOURCE: '${MAISON_CI_DB_USERNAME}:${MAISON_CI_DB_PASSWORD}@tcp(db:3306)/${MAISON_CI_DB_NAME}?parseTime=true'
      GIN_MODE: release
    depends_on:
      - db
      - vcs
  ci-agent:
    image: 'drone/agent:0.8'
    restart: on-failure
    command: agent
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - '/var/run/docker.sock:/var/run/docker.sock'
    networks:
      maison:
        aliases:
          - ci
    environment:
      DRONE_SERVER: ci:9000
      DRONE_SECRET: '${MAISON_CI_DRONE_SECRET}'
    depends_on:
      - ci
  network:
    image: 'jacobalberty/unifi:5.7'
    restart: on-failure
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './network/data:/unifi'
    network_mode: host
    environment:
      RUNAS_UID0: 'false'
  web:
    image: maison:web
    build: ./web
    restart: on-failure
    volumes:
      - '/etc/localtime:/etc/localtime:ro'
      - '/etc/timezone:/etc/timezone:ro'
      - './web/data/htpasswd:/etc/nginx/htpasswd'
      - './web/data/letsencrypt:/etc/letsencrypt'
    expose:
     - '80'
     - '443'
    ports:
     - '80:80'
     - '443:443'
    networks:
      maison:
        aliases:
          - web
          - '${MAISON_NETWORK_DOMAIN}'
          - '${MAISON_HAB_DOMAIN}'
          - '${MAISON_OLA_DOMAIN}'
          - '${MAISON_VCS_DOMAIN}'
          - '${MAISON_CI_DOMAIN}'
    environment:
      MAISON_WEB_PROTOCOL: '${MAISON_WEB_PROTOCOL}'
      MAISON_DOMAINS: '${MAISON_NETWORK_DOMAIN} ${MAISON_HAB_DOMAIN} ${MAISON_OLA_DOMAIN} ${MAISON_VCS_DOMAIN} ${MAISON_CI_DOMAIN}'
      MAISON_NETWORK_DOMAIN: '${MAISON_NETWORK_DOMAIN}'
      MAISON_HAB_DOMAIN: '${MAISON_HAB_DOMAIN}'
      MAISON_OLA_DOMAIN: '${MAISON_OLA_DOMAIN}'
      MAISON_VCS_DOMAIN: '${MAISON_VCS_DOMAIN}'
      MAISON_CI_DOMAIN: '${MAISON_CI_DOMAIN}'
networks:
  maison:
