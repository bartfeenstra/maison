#!/usr/bin/env bash

cd `dirname "$0"`/..

# Exit on errors
exit_code=0
trap 'exit $?' ERR

if [ ! -f ./.env ]; then
    ./bin/generate-env-passwords .env.dist > .env
    echo "A new configuration file with random passwords has been saved to `readlink -f ./.env`. Fill in the remaining settings, and run this command (./bin/build) again to finish the build."
    exit 1
fi
mkdir -p ./services/db/data
mkdir -p ./services/network/data
mkdir -p ./services/web/data
mkdir -p ./services/web/data/letsencrypt
sudo chown -R :docker ./services/*/data
sudo chmod -R ug+rwx ./services/*/data
touch ./services/web/data/htpasswd
rules=`docker run --entrypoint /bin/cat bartfeenstra/ola:0.1 /etc/udev/rules.d/ftdi.rules`
sudo bash -c 'echo "$rules" > /etc/udev/rules.d/ftdi.rules'

sudo groupadd -f -g 9001 openhab
id -u openhab &>/dev/null || sudo useradd -u 9001 -g openhab -r -s /sbin/nologin openhab && sudo usermod -a -G openhab `whoami`

# Set up wait-for-it.
if [ ! -f ./bin/wait-for-it ]; then
    curl https://raw.githubusercontent.com/vishnubob/wait-for-it/master/wait-for-it.sh > ./bin/wait-for-it
    chmod ugo+rx ./bin/wait-for-it
fi

docker-compose -p maison build $@

# Stop aggregating build step exit codes.
trap - ERR

if [ $exit_code -eq 0 ]
then
    echo "SUCCESS: ALL BUILD STEPS PASSED."
else
    echo "ERROR: SOME BUILD STEPS FAILED."
fi
exit $exit_code
