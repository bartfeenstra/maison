#!/usr/bin/env bash

is_installed() {
    # Check for an installation manifest.
    if [ -f ./data/.installed_version ]; then
        return 0
    fi

    # Before we kept an installation manifest, there was no sure way to determine whether the application was installed.
    # Instead, we check if any user data, created by the containers, exists.
    if grep -q '^\./services/[^/]*/data$' < <(find ./services 2>/dev/null); then
        echo 0 > ./data/.installed_version
        return 0
    fi
    return 1
}

all_versions() {
    find ./upgrades 2>/dev/null | grep '^\./upgrades/' | sed -r 's/^\.\/upgrades\/([0-9]+)-.*/\1/'
}

current_version() {
    if is_installed; then
        cat ./data/.installed_version
        return 0
    fi
    echo 0
}

latest_version() {
    all_versions | tail -n 1
}

available_versions() {
    local current
    current=$(current_version)
    for version in $(all_versions); do
        if [[ "$version" -gt "$current" ]]; then
            echo "$version"
        fi
    done
}

upgrade() {
    if ! is_installed; then
        ./vendor/krab/bin/krab stdio-alert 'Maison has not been installed yet. Did you mean ./bin/install?'
        exit 2
    fi
    while read -r version; do
        upgrade="$(ls ./upgrades/"$version"-*)"
        ./vendor/krab/bin/krab stdio-inform "Running upgrade $upgrade..."
        $upgrade
        echo "$version" > ./data/.installed_version
    done < <(available_versions)
}